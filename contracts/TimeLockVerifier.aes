@compiler >= 4

contract TimeLockAggregator =
   record state  = 
      { people : map(address, lockSequence) }

   record lockSequence =
      { first_name : string
      , last_name  : string
      , age        : int }

   entrypoint init() = { people = {} }

   stateful entrypoint timeLockAggregator(person_address: address, first_name': string, last_name': string, age: int) =
      let new_person : lockSequence =
         { first_name = first_name',
           last_name = last_name',
           age = age }
      put(state{ people[person_address] = new_person })

   entrypoint timeLockVerifier(person_address : address) : lockSequence = 
      switch(Map.lookup(person_address, state.people))
         None => abort("No data for that person")
         Some(person_found) => person_found
